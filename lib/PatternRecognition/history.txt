全体的な変更履歴を以下に示す。

		 2011/12/8	開発開始
					コンセプトは、使い易く書きやすく。。。
					効率的で高速な演算とは縁遠い構造をしています。
					オブジェクトや演算の関係が分かり易ければ良いという考えの基で作りました。
		2011/12/9	基本動作の確認が行えるまでは組めた。
					今後の予定：学習終了トリガとなる構造体の宣言
								学習モードの整備
								保存されたファイルから文字列を解析して、NeuralNetTeacherクラスの再構成・NNクラスの再構成を実施するメソッドを整備
		2011/12/11  昨日に引き続き、デバッグとコメント見直しを行った。
		2011/12/24  昨日より再度整備を開始
					ニューラルネットの核はほぼできたと思う。ただし、関数近似に使用できない。どうすればよいのだろう？
					今日は学習用のクラスを整備中
		2011/12/25  学習用のクラスはファイル保存機能を除いてほぼ完全に整備できたと思う。
					次は保存メソッドと、識別機能利用時のファイルからの復元機能を設計する必要がある。
		2011/12/27  昨日の内に保存ファイルからの復帰機能を実装できた。
					今日はUIの改善と動作テストを行った。
					本日で基本的な機能の実装は終わったと思う。
					無論、学習の方法や評価の方法に思うところはあるのだけどこれで一つの区切りとする。
		2011/12/30  結局気になっていたので学習器の学習アルゴリズムを、モデル毎にまとめて学習する方法から均等に学習する（引数によってモデル毎にもできる）方法に変えた。
					それに伴いモデルクラスも改良した。
					結果はというと…鳥の学習ではとりわけよくなった。
					鳥だと、特定の種だけ2倍学習させただけで途端に成績が悪くなる。
		2012/3/10   GetIDandLikelihoodにおいて、入力された出力層の値が非値だった場合にエラーが発生していたのを訂正
		2012/3/13   コンソールアプリだとメッセージボックスが邪魔であったのでこれを削除し、代わりに例外をスローするように変更した。
		2012/5/9	これまで一つのファイルに格納していたクラス群をファイルに可能な限り分割した。
		2012/5/14	Modelクラスにジャックナイフ判定に備えた機能を搭載させた。
		2012/6/25	交差確認法を実装できたのでリリース準備に入る。
					しかし、WEKAでもできるので別にこれはほおっておいて、WEKAのフォーマットに合わせた改造の方が優先度高いんじゃないかと。。。